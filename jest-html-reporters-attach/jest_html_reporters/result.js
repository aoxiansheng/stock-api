window.jest_html_reporters_callback__({"numFailedTestSuites":10,"numFailedTests":19,"numPassedTestSuites":1,"numPassedTests":180,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":6,"numTodoTests":0,"numTotalTestSuites":11,"numTotalTests":199,"startTime":1759212096782,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/constants/smart-cache.env-vars.constants.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1056:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1126:165\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/constants/smart-cache.component.constants.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1056:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1126:165\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/constants/smart-cache-error-codes.constants.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1056:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1126:165\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/module/smart-cache.module.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[31m\u001b[1mConfiguration error\u001b[22m:\u001b[39m\n    \u001b[31m\u001b[39m\n    \u001b[31mCould not locate module \u001b[1m@core/05-caching/basic-cache/module/basic-cache.module\u001b[22m mapped as:\u001b[39m\n    \u001b[31m\u001b[1m/Users/honor/Documents/code/newstockapi/backend/src/core/$1\u001b[22m.\u001b[39m\n    \u001b[31m\u001b[39m\n    \u001b[31mPlease check your configuration for these entries:\u001b[39m\n    \u001b[31m{\u001b[39m\n    \u001b[31m  \"moduleNameMapper\": {\u001b[39m\n    \u001b[31m    \"/^@core\\/(.*)$/\": \"\u001b[1m/Users/honor/Documents/code/newstockapi/backend/src/core/$1\u001b[22m\"\u001b[39m\n    \u001b[31m  },\u001b[39m\n    \u001b[31m  \"resolver\": \u001b[1mundefined\u001b[22m\u001b[39m\n    \u001b[31m}\u001b[39m\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m }))\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@core/05-caching/basic-cache/module/basic-cache.module'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m ({\n     \u001b[90m    |\u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m   \u001b[33mBasicCacheModule\u001b[39m\u001b[33m:\u001b[39m {\n     \u001b[90m 24 |\u001b[39m     module\u001b[33m:\u001b[39m \u001b[32m'MockBasicCacheModule'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 25 |\u001b[39m     providers\u001b[33m:\u001b[39m []\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat createNoMappedModuleFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:1117:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/module/smart-cache.module.spec.ts\u001b[39m\u001b[0m\u001b[2m:22:6)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2306: \u001b[0mFile '/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.ts' is not a module.\n\n    \u001b[7m6\u001b[0m import { CacheStrategy } from '@core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface';\n    \u001b[7m \u001b[0m \u001b[91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m176\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'includes' does not exist on type 'unknown'.\n\n    \u001b[7m176\u001b[0m       const timelinessStrategies = strategies.filter(s => s.includes('timeliness'));\n    \u001b[7m   \u001b[0m \u001b[91m                                                            ~~~~~~~~\u001b[0m\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'toUpperCase' does not exist on type 'unknown'.\n\n    \u001b[7m180\u001b[0m       const upperCaseStrategies = strategies.map(s => s.toUpperCase());\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~~~~~~~\u001b[0m\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'length' does not exist on type 'unknown'.\n\n    \u001b[7m185\u001b[0m       const longestStrategyName = strategies.reduce((a, b) => a.length > b.length ? a : b);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~\u001b[0m\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m185\u001b[0m:\u001b[93m76\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'length' does not exist on type 'unknown'.\n\n    \u001b[7m185\u001b[0m       const longestStrategyName = strategies.reduce((a, b) => a.length > b.length ? a : b);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                           ~~~~~~\u001b[0m\n    \u001b[96mtest/jest/unit/core/05-caching/module/smart-cache/interfaces/smart-cache-config.interface.spec.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'includes' does not exist on type 'unknown'.\n\n    \u001b[7m189\u001b[0m       expect(strategies.some(s => s.includes('cache'))).toBe(true);\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~\u001b[0m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759212103940,"loadTestEnvironmentEnd":1759212097158,"loadTestEnvironmentStart":1759212096858,"runtime":6781,"setupAfterEnvEnd":1759212097622,"setupAfterEnvStart":1759212097622,"setupFilesEnd":1759212097159,"setupFilesStart":1759212097159,"slow":true,"start":1759212097159},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/constants/smart-cache.constants.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SmartCache Constants","SMART_CACHE_CONSTANTS"],"duration":3,"failureMessages":[],"fullName":"SmartCache Constants SMART_CACHE_CONSTANTS should be defined and frozen","status":"passed","title":"should be defined and frozen"},{"ancestorTitles":["SmartCache Constants","SMART_CACHE_CONSTANTS"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants SMART_CACHE_CONSTANTS should have all required top-level properties","status":"passed","title":"should have all required top-level properties"},{"ancestorTitles":["SmartCache Constants","TTL Constants"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants TTL Constants should define all TTL constants","status":"passed","title":"should define all TTL constants"},{"ancestorTitles":["SmartCache Constants","TTL Constants"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants TTL Constants should have numeric TTL values","status":"passed","title":"should have numeric TTL values"},{"ancestorTitles":["SmartCache Constants","TTL Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants TTL Constants should maintain logical TTL ordering","status":"passed","title":"should maintain logical TTL ordering"},{"ancestorTitles":["SmartCache Constants","TTL Constants"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants TTL Constants should have reasonable TTL values for practical use","status":"passed","title":"should have reasonable TTL values for practical use"},{"ancestorTitles":["SmartCache Constants","INTERVALS_MS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants INTERVALS_MS Constants should define all interval constants","status":"passed","title":"should define all interval constants"},{"ancestorTitles":["SmartCache Constants","INTERVALS_MS Constants"],"duration":2,"failureMessages":[],"fullName":"SmartCache Constants INTERVALS_MS Constants should have numeric interval values in milliseconds","status":"passed","title":"should have numeric interval values in milliseconds"},{"ancestorTitles":["SmartCache Constants","INTERVALS_MS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants INTERVALS_MS Constants should have reasonable interval values for system operations","status":"passed","title":"should have reasonable interval values for system operations"},{"ancestorTitles":["SmartCache Constants","CONCURRENCY_LIMITS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants CONCURRENCY_LIMITS Constants should define all concurrency constants","status":"passed","title":"should define all concurrency constants"},{"ancestorTitles":["SmartCache Constants","CONCURRENCY_LIMITS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants CONCURRENCY_LIMITS Constants should have numeric concurrency values","status":"passed","title":"should have numeric concurrency values"},{"ancestorTitles":["SmartCache Constants","CONCURRENCY_LIMITS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants CONCURRENCY_LIMITS Constants should maintain logical concurrency ordering","status":"passed","title":"should maintain logical concurrency ordering"},{"ancestorTitles":["SmartCache Constants","CONCURRENCY_LIMITS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants CONCURRENCY_LIMITS Constants should have practical concurrency limits","status":"passed","title":"should have practical concurrency limits"},{"ancestorTitles":["SmartCache Constants","THRESHOLD_RATIOS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants THRESHOLD_RATIOS Constants should define all threshold ratios","status":"passed","title":"should define all threshold ratios"},{"ancestorTitles":["SmartCache Constants","THRESHOLD_RATIOS Constants"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants THRESHOLD_RATIOS Constants should have numeric ratio values between 0 and 1","status":"passed","title":"should have numeric ratio values between 0 and 1"},{"ancestorTitles":["SmartCache Constants","THRESHOLD_RATIOS Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants THRESHOLD_RATIOS Constants should have logical ratio relationships","status":"passed","title":"should have logical ratio relationships"},{"ancestorTitles":["SmartCache Constants","Type Safety"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants Type Safety should provide correct TypeScript types","status":"passed","title":"should provide correct TypeScript types"},{"ancestorTitles":["SmartCache Constants","Type Safety"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants Type Safety should ensure immutability through freezing","status":"passed","title":"should ensure immutability through freezing"},{"ancestorTitles":["SmartCache Constants","Type Safety"],"duration":1,"failureMessages":[],"fullName":"SmartCache Constants Type Safety should support const assertion typing","status":"passed","title":"should support const assertion typing"},{"ancestorTitles":["SmartCache Constants","Integration with Foundation Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants Integration with Foundation Constants should reference foundation constants appropriately","status":"passed","title":"should reference foundation constants appropriately"},{"ancestorTitles":["SmartCache Constants","Integration with Foundation Constants"],"duration":0,"failureMessages":[],"fullName":"SmartCache Constants Integration with Foundation Constants should maintain backward compatibility structure","status":"passed","title":"should maintain backward compatibility structure"}]},{"numFailingTests":9,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759212104090,"loadTestEnvironmentEnd":1759212097196,"loadTestEnvironmentStart":1759212096874,"runtime":6889,"setupAfterEnvEnd":1759212097683,"setupAfterEnvStart":1759212097683,"setupFilesEnd":1759212097201,"setupFilesStart":1759212097201,"slow":true,"start":1759212097201},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateTTL › should handle invalid inputs gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 75 |\u001b[39m     it(\u001b[32m'should handle invalid inputs gracefully'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 76 |\u001b[39m       \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateTTL(\u001b[33mNaN\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'nan-test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 77 |\u001b[39m       expect(errors\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 79 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:77:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateThresholdRatio › should handle invalid ratios gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 |\u001b[39m     it(\u001b[32m'should handle invalid ratios gracefully'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m       \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateThresholdRatio(\u001b[33mNaN\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'nan-test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 107 |\u001b[39m       expect(errors\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m     it(\u001b[32m'should handle infinity values'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:107:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateConcurrency › should validate correct concurrency values\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[32m- Array []\u001b[39m\n    \u001b[31m+ Array [\u001b[39m\n    \u001b[31m+   \"并发数必须在2-16之间，当前值: 50\",\u001b[39m\n    \u001b[31m+ ]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m       \u001b[36mconst\u001b[39m errors2 \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateConcurrency(\u001b[35m50\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 127 |\u001b[39m       expect(errors2)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 129 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m     it(\u001b[32m'should return errors for values outside allowed range'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:127:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateConcurrency › should handle invalid inputs gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 152 |\u001b[39m     it(\u001b[32m'should handle invalid inputs gracefully'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 153 |\u001b[39m       \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateConcurrency(\u001b[33mNaN\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 154 |\u001b[39m       expect(errors\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m     it(\u001b[32m'should validate boundary values from constants'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:154:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateConcurrency › should validate boundary values from constants\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 161 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 162 |\u001b[39m       \u001b[90m// At least one of these should be valid based on typical concurrency limits\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 163 |\u001b[39m       expect(errors1\u001b[33m.\u001b[39mlength \u001b[33m===\u001b[39m \u001b[35m0\u001b[39m \u001b[33m||\u001b[39m errors2\u001b[33m.\u001b[39mlength \u001b[33m===\u001b[39m \u001b[35m0\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 164 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 166 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:163:60)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateInterval › should handle invalid inputs gracefully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 212 |\u001b[39m     it(\u001b[32m'should handle invalid inputs gracefully'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 213 |\u001b[39m       \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateInterval(\u001b[33mNaN\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'nan-test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 214 |\u001b[39m       expect(errors\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 215 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 216 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 217 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:214:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › validateAdaptiveTtlRange › should allow min and max TTL to be equal when base TTL matches\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 1\u001b[39m\n    \u001b[31m+ Received  + 3\u001b[39m\n\n    \u001b[32m- Array []\u001b[39m\n    \u001b[31m+ Array [\u001b[39m\n    \u001b[31m+   \"自适应策略: 最小TTL(60)必须小于最大TTL(60)\",\u001b[39m\n    \u001b[31m+ ]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 237 |\u001b[39m     it(\u001b[32m'should allow min and max TTL to be equal when base TTL matches'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 238 |\u001b[39m       \u001b[36mconst\u001b[39m errors \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateAdaptiveTtlRange(\u001b[35m60\u001b[39m\u001b[33m,\u001b[39m \u001b[35m60\u001b[39m\u001b[33m,\u001b[39m \u001b[35m60\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 239 |\u001b[39m       expect(errors)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 240 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 241 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 242 |\u001b[39m     it(\u001b[32m'should return errors for equal min/max when base TTL is different'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:239:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › Edge Cases and Error Handling › should handle NaN values in configurations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 348 |\u001b[39m     it(\u001b[32m'should handle NaN values in configurations'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 349 |\u001b[39m       \u001b[36mconst\u001b[39m errors1 \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateConcurrency(\u001b[33mNaN\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 350 |\u001b[39m       expect(errors1\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 351 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 352 |\u001b[39m       \u001b[36mconst\u001b[39m errors2 \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateInterval(\u001b[33mNaN\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 353 |\u001b[39m       expect(errors2\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:350:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigValidator › Edge Cases and Error Handling › should handle extreme negative values\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: > \u001b[32m0\u001b[39m\n    Received:   \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 395 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 396 |\u001b[39m       \u001b[36mconst\u001b[39m errors2 \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateAdaptiveTtlRange(\u001b[33m-\u001b[39m\u001b[35m100\u001b[39m\u001b[33m,\u001b[39m \u001b[33m-\u001b[39m\u001b[35m50\u001b[39m\u001b[33m,\u001b[39m \u001b[33m-\u001b[39m\u001b[35m75\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 397 |\u001b[39m       expect(errors2\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 398 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 399 |\u001b[39m       \u001b[36mconst\u001b[39m errors3 \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigValidator\u001b[39m\u001b[33m.\u001b[39mvalidateMarketAwareConfig(\u001b[33m-\u001b[39m\u001b[35m1000\u001b[39m\u001b[33m,\u001b[39m \u001b[33m-\u001b[39m\u001b[35m2000\u001b[39m\u001b[33m,\u001b[39m \u001b[33m-\u001b[39m\u001b[35m3000\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 400 |\u001b[39m       expect(errors3\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts\u001b[39m\u001b[0m\u001b[2m:397:30)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":4,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should validate correct TTL values","status":"passed","title":"should validate correct TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should return errors for negative TTL values","status":"passed","title":"should return errors for negative TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should return errors for zero TTL values","status":"passed","title":"should return errors for zero TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should return errors for very large TTL values","status":"passed","title":"should return errors for very large TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should include strategy name in error messages","status":"passed","title":"should include strategy name in error messages"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should handle different strategy names","status":"passed","title":"should handle different strategy names"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateTTL should validate boundary values","status":"passed","title":"should validate boundary values"},{"ancestorTitles":["SmartCacheConfigValidator","validateTTL"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:77:29)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateTTL should handle invalid inputs gracefully","status":"failed","title":"should handle invalid inputs gracefully"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should validate correct threshold ratio","status":"passed","title":"should validate correct threshold ratio"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should validate boundary values","status":"passed","title":"should validate boundary values"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should return errors for negative ratios","status":"passed","title":"should return errors for negative ratios"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should return errors for ratios greater than 1","status":"passed","title":"should return errors for ratios greater than 1"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:107:29)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateThresholdRatio should handle invalid ratios gracefully","status":"failed","title":"should handle invalid ratios gracefully"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should handle infinity values","status":"passed","title":"should handle infinity values"},{"ancestorTitles":["SmartCacheConfigValidator","validateThresholdRatio"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateThresholdRatio should include strategy name in error messages","status":"passed","title":"should include strategy name in error messages"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[32m- Array []\u001b[39m\n\u001b[31m+ Array [\u001b[39m\n\u001b[31m+   \"并发数必须在2-16之间，当前值: 50\",\u001b[39m\n\u001b[31m+ ]\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:127:23)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateConcurrency should validate correct concurrency values","status":"failed","title":"should validate correct concurrency values"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateConcurrency should return errors for values outside allowed range","status":"passed","title":"should return errors for values outside allowed range"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateConcurrency should return errors for negative concurrency","status":"passed","title":"should return errors for negative concurrency"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateConcurrency should handle decimal values gracefully","status":"passed","title":"should handle decimal values gracefully"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:154:29)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateConcurrency should handle invalid inputs gracefully","status":"failed","title":"should handle invalid inputs gracefully"},{"ancestorTitles":["SmartCacheConfigValidator","validateConcurrency"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:163:60)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateConcurrency should validate boundary values from constants","status":"failed","title":"should validate boundary values from constants"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should validate correct interval values","status":"passed","title":"should validate correct interval values"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should return errors for zero intervals","status":"passed","title":"should return errors for zero intervals"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should return errors for negative intervals","status":"passed","title":"should return errors for negative intervals"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should return errors for very small intervals","status":"passed","title":"should return errors for very small intervals"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should return errors for very large intervals","status":"passed","title":"should return errors for very large intervals"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should include interval name in error message","status":"passed","title":"should include interval name in error message"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should handle valid 24 hour intervals","status":"passed","title":"should handle valid 24 hour intervals"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateInterval should handle multiple errors for very bad values","status":"passed","title":"should handle multiple errors for very bad values"},{"ancestorTitles":["SmartCacheConfigValidator","validateInterval"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:214:29)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateInterval should handle invalid inputs gracefully","status":"failed","title":"should handle invalid inputs gracefully"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should validate correct adaptive TTL range","status":"passed","title":"should validate correct adaptive TTL range"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should return errors when min TTL is greater than max TTL","status":"passed","title":"should return errors when min TTL is greater than max TTL"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should return errors when base TTL is outside range","status":"passed","title":"should return errors when base TTL is outside range"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 3\u001b[39m\n\n\u001b[32m- Array []\u001b[39m\n\u001b[31m+ Array [\u001b[39m\n\u001b[31m+   \"自适应策略: 最小TTL(60)必须小于最大TTL(60)\",\u001b[39m\n\u001b[31m+ ]\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:239:22)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should allow min and max TTL to be equal when base TTL matches","status":"failed","title":"should allow min and max TTL to be equal when base TTL matches"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should return errors for equal min/max when base TTL is different","status":"passed","title":"should return errors for equal min/max when base TTL is different"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should handle boundary cases correctly","status":"passed","title":"should handle boundary cases correctly"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should validate with typical cache values","status":"passed","title":"should validate with typical cache values"},{"ancestorTitles":["SmartCacheConfigValidator","validateAdaptiveTtlRange"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateAdaptiveTtlRange should handle edge case with very small values","status":"passed","title":"should handle edge case with very small values"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should validate correct market-aware configuration","status":"passed","title":"should validate correct market-aware configuration"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should return errors for negative TTL values","status":"passed","title":"should return errors for negative TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should return errors for zero TTL values","status":"passed","title":"should return errors for zero TTL values"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should return errors for invalid check interval","status":"passed","title":"should return errors for invalid check interval"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should warn when open TTL is greater than or equal to closed TTL","status":"passed","title":"should warn when open TTL is greater than or equal to closed TTL"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should validate typical market configuration values","status":"passed","title":"should validate typical market configuration values"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should handle valid boundary cases","status":"passed","title":"should handle valid boundary cases"},{"ancestorTitles":["SmartCacheConfigValidator","validateMarketAwareConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator validateMarketAwareConfig should handle edge case with very large values","status":"passed","title":"should handle edge case with very large values"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle infinity values in TTL","status":"passed","title":"should handle infinity values in TTL"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:350:30)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle NaN values in configurations","status":"failed","title":"should handle NaN values in configurations"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should provide meaningful error messages with context","status":"passed","title":"should provide meaningful error messages with context"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle very large but potentially valid values","status":"passed","title":"should handle very large but potentially valid values"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle decimal values consistently","status":"passed","title":"should handle decimal values consistently"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle zero values across all validators","status":"passed","title":"should handle zero values across all validators"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/validators/smart-cache-config.validator.spec.ts:397:30)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should handle extreme negative values","status":"failed","title":"should handle extreme negative values"},{"ancestorTitles":["SmartCacheConfigValidator","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigValidator Edge Cases and Error Handling should validate complex scenarios with multiple parameters","status":"passed","title":"should validate complex scenarios with multiple parameters"}]},{"numFailingTests":1,"numPassingTests":48,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759212104466,"loadTestEnvironmentEnd":1759212097133,"loadTestEnvironmentStart":1759212096850,"runtime":7332,"setupAfterEnvEnd":1759212097611,"setupAfterEnvStart":1759212097611,"setupFilesEnd":1759212097134,"setupFilesStart":1759212097134,"slow":true,"start":1759212097134},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/services/smart-cache-standardized.service.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheStandardizedService › Smart Cache Orchestration › should track strategy usage stats\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m3\u001b[39m\n    Received: \u001b[31m9\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 487 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 488 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m service\u001b[33m.\u001b[39mgetStats()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 489 |\u001b[39m       expect(stats\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mtotalOperations)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 490 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 491 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 492 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/services/smart-cache-standardized.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:489:42)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["SmartCacheStandardizedService","Service Initialization"],"duration":12,"failureMessages":[],"fullName":"SmartCacheStandardizedService Service Initialization should be defined","status":"passed","title":"should be defined"},{"ancestorTitles":["SmartCacheStandardizedService","Service Initialization"],"duration":17,"failureMessages":[],"fullName":"SmartCacheStandardizedService Service Initialization should have correct module metadata","status":"passed","title":"should have correct module metadata"},{"ancestorTitles":["SmartCacheStandardizedService","Service Initialization"],"duration":25,"failureMessages":[],"fullName":"SmartCacheStandardizedService Service Initialization should have required supported features","status":"passed","title":"should have required supported features"},{"ancestorTitles":["SmartCacheStandardizedService","Service Initialization"],"duration":14,"failureMessages":[],"fullName":"SmartCacheStandardizedService Service Initialization should start in uninitialized state","status":"passed","title":"should start in uninitialized state"},{"ancestorTitles":["SmartCacheStandardizedService","Module Lifecycle"],"duration":12,"failureMessages":[],"fullName":"SmartCacheStandardizedService Module Lifecycle should initialize successfully","status":"passed","title":"should initialize successfully"},{"ancestorTitles":["SmartCacheStandardizedService","Module Lifecycle"],"duration":5,"failureMessages":[],"fullName":"SmartCacheStandardizedService Module Lifecycle should handle initialization errors","status":"passed","title":"should handle initialization errors"},{"ancestorTitles":["SmartCacheStandardizedService","Module Lifecycle"],"duration":14,"failureMessages":[],"fullName":"SmartCacheStandardizedService Module Lifecycle should destroy cleanly","status":"passed","title":"should destroy cleanly"},{"ancestorTitles":["SmartCacheStandardizedService","Module Lifecycle"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Module Lifecycle should get module status","status":"passed","title":"should get module status"},{"ancestorTitles":["SmartCacheStandardizedService","Configuration Management"],"duration":3,"failureMessages":[],"fullName":"SmartCacheStandardizedService Configuration Management should validate config successfully","status":"passed","title":"should validate config successfully"},{"ancestorTitles":["SmartCacheStandardizedService","Configuration Management"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Configuration Management should reject invalid config","status":"passed","title":"should reject invalid config"},{"ancestorTitles":["SmartCacheStandardizedService","Configuration Management"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Configuration Management should get module specific config","status":"passed","title":"should get module specific config"},{"ancestorTitles":["SmartCacheStandardizedService","Configuration Management"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Configuration Management should apply config updates","status":"passed","title":"should apply config updates"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle get operation","status":"passed","title":"should handle get operation"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle set operation","status":"passed","title":"should handle set operation"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle delete operation","status":"passed","title":"should handle delete operation"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle exists operation","status":"passed","title":"should handle exists operation"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle ttl operation","status":"passed","title":"should handle ttl operation"},{"ancestorTitles":["SmartCacheStandardizedService","Basic Cache Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Basic Cache Operations should handle expire operation","status":"passed","title":"should handle expire operation"},{"ancestorTitles":["SmartCacheStandardizedService","Batch Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Batch Operations should handle batch get operation","status":"passed","title":"should handle batch get operation"},{"ancestorTitles":["SmartCacheStandardizedService","Batch Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Batch Operations should handle batch set operation","status":"passed","title":"should handle batch set operation"},{"ancestorTitles":["SmartCacheStandardizedService","Batch Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Batch Operations should handle batch delete operation","status":"passed","title":"should handle batch delete operation"},{"ancestorTitles":["SmartCacheStandardizedService","Batch Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Batch Operations should handle clear operation","status":"passed","title":"should handle clear operation"},{"ancestorTitles":["SmartCacheStandardizedService","Advanced Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Advanced Operations should handle increment operation","status":"passed","title":"should handle increment operation"},{"ancestorTitles":["SmartCacheStandardizedService","Advanced Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Advanced Operations should handle decrement operation","status":"passed","title":"should handle decrement operation"},{"ancestorTitles":["SmartCacheStandardizedService","Advanced Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Advanced Operations should handle getOrSet operation","status":"passed","title":"should handle getOrSet operation"},{"ancestorTitles":["SmartCacheStandardizedService","Advanced Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Advanced Operations should handle getOrSet factory errors","status":"passed","title":"should handle getOrSet factory errors"},{"ancestorTitles":["SmartCacheStandardizedService","Advanced Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Advanced Operations should handle setIfNotExists operation","status":"passed","title":"should handle setIfNotExists operation"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should orchestrate cache with STRONG_TIMELINESS strategy","status":"passed","title":"should orchestrate cache with STRONG_TIMELINESS strategy"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should orchestrate cache with WEAK_TIMELINESS strategy","status":"passed","title":"should orchestrate cache with WEAK_TIMELINESS strategy"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should orchestrate cache with MARKET_AWARE strategy","status":"passed","title":"should orchestrate cache with MARKET_AWARE strategy"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should orchestrate cache with NO_CACHE strategy","status":"passed","title":"should orchestrate cache with NO_CACHE strategy"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should orchestrate cache with ADAPTIVE strategy","status":"passed","title":"should orchestrate cache with ADAPTIVE strategy"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should handle orchestration errors","status":"passed","title":"should handle orchestration errors"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache Orchestration"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m3\u001b[39m\nReceived: \u001b[31m9\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/services/smart-cache-standardized.service.spec.ts:489:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"SmartCacheStandardizedService Smart Cache Orchestration should track strategy usage stats","status":"failed","title":"should track strategy usage stats"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache API Methods"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache API Methods should get data with smart cache","status":"passed","title":"should get data with smart cache"},{"ancestorTitles":["SmartCacheStandardizedService","Smart Cache API Methods"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Smart Cache API Methods should batch get data with smart cache","status":"passed","title":"should batch get data with smart cache"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":2,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should get cache statistics","status":"passed","title":"should get cache statistics"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should reset statistics","status":"passed","title":"should reset statistics"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should get health status","status":"passed","title":"should get health status"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should get performance metrics","status":"passed","title":"should get performance metrics"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should get capacity info","status":"passed","title":"should get capacity info"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should get error statistics","status":"passed","title":"should get error statistics"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should run diagnostics","status":"passed","title":"should run diagnostics"},{"ancestorTitles":["SmartCacheStandardizedService","Monitoring and Statistics"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Monitoring and Statistics should ping successfully","status":"passed","title":"should ping successfully"},{"ancestorTitles":["SmartCacheStandardizedService","Utility Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Utility Operations should get memory usage","status":"passed","title":"should get memory usage"},{"ancestorTitles":["SmartCacheStandardizedService","Utility Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Utility Operations should get connection info","status":"passed","title":"should get connection info"},{"ancestorTitles":["SmartCacheStandardizedService","Utility Operations"],"duration":0,"failureMessages":[],"fullName":"SmartCacheStandardizedService Utility Operations should get keys with pattern","status":"passed","title":"should get keys with pattern"},{"ancestorTitles":["SmartCacheStandardizedService","Utility Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Utility Operations should export data","status":"passed","title":"should export data"},{"ancestorTitles":["SmartCacheStandardizedService","Utility Operations"],"duration":1,"failureMessages":[],"fullName":"SmartCacheStandardizedService Utility Operations should import data","status":"passed","title":"should import data"}]},{"numFailingTests":7,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759212104518,"loadTestEnvironmentEnd":1759212097229,"loadTestEnvironmentStart":1759212096868,"runtime":7286,"setupAfterEnvEnd":1759212097628,"setupAfterEnvStart":1759212097628,"setupFilesEnd":1759212097232,"setupFilesStart":1759212097232,"slow":true,"start":1759212097232},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Environment Variable Parsing › should use environment variables when provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m10\u001b[39m\n    Received: \u001b[31m5\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 183 |\u001b[39m       \u001b[36mconst\u001b[39m config \u001b[33m=\u001b[39m \u001b[33mSmartCacheConfigFactory\u001b[39m\u001b[33m.\u001b[39mcreateConfig()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 184 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 185 |\u001b[39m       expect(config\u001b[33m.\u001b[39mttl\u001b[33m.\u001b[39mrealTimeTtlSeconds)\u001b[33m.\u001b[39mtoBe(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 186 |\u001b[39m       expect(config\u001b[33m.\u001b[39mttl\u001b[33m.\u001b[39mbatchQueryTtlSeconds)\u001b[33m.\u001b[39mtoBe(\u001b[35m600\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 187 |\u001b[39m       expect(config\u001b[33m.\u001b[39mperformance\u001b[33m.\u001b[39mmaxConcurrentOperations)\u001b[33m.\u001b[39mtoBe(\u001b[35m8\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 188 |\u001b[39m       expect(config\u001b[33m.\u001b[39mmetricsEnabled)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:185:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Environment Variable Parsing › should apply min/max boundaries to parsed values\u001b[39m\u001b[22m\n\n    BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdetermineRetryability(errorCode\u001b[33m,\u001b[39m statusCode)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBusinessException\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       errorCode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       operation\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException (\u001b[22m\u001b[2msrc/common/core/exceptions/universal-exception.factory.ts\u001b[2m:49:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException [as createConfig] (\u001b[22m\u001b[2msrc/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts\u001b[2m:162:39)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:229:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Configuration Validation › should throw error for invalid configuration\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\n    Received function did not throw\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 301 |\u001b[39m       expect(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 302 |\u001b[39m         \u001b[33mSmartCacheConfigFactory\u001b[39m\u001b[33m.\u001b[39mcreateConfig()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 303 |\u001b[39m       })\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 304 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m       \u001b[90m// Restore original implementation\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 306 |\u001b[39m       (\u001b[33mSmartCacheConfigFactory\u001b[39m\u001b[33m.\u001b[39mcreateConfig \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockRestore()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:303:10)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Edge Cases and Error Handling › should handle extreme environment variable values\u001b[39m\u001b[22m\n\n    BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdetermineRetryability(errorCode\u001b[33m,\u001b[39m statusCode)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBusinessException\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       errorCode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       operation\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException (\u001b[22m\u001b[2msrc/common/core/exceptions/universal-exception.factory.ts\u001b[2m:49:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException [as createConfig] (\u001b[22m\u001b[2msrc/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts\u001b[2m:162:39)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:466:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Edge Cases and Error Handling › should handle memory calculation edge cases\u001b[39m\u001b[22m\n\n    BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdetermineRetryability(errorCode\u001b[33m,\u001b[39m statusCode)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBusinessException\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       errorCode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       operation\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException (\u001b[22m\u001b[2msrc/common/core/exceptions/universal-exception.factory.ts\u001b[2m:49:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException [as createConfig] (\u001b[22m\u001b[2msrc/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts\u001b[2m:162:39)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:476:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Edge Cases and Error Handling › should validate configuration name requirements\u001b[39m\u001b[22m\n\n    BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdetermineRetryability(errorCode\u001b[33m,\u001b[39m statusCode)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBusinessException\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       errorCode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       operation\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException (\u001b[22m\u001b[2msrc/common/core/exceptions/universal-exception.factory.ts\u001b[2m:49:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException [as createConfig] (\u001b[22m\u001b[2msrc/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts\u001b[2m:162:39)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:484:46)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheConfigFactory › Edge Cases and Error Handling › should ensure TTL relationships are logical\u001b[39m\u001b[22m\n\n    BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 |\u001b[39m       \u001b[33m:\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdetermineRetryability(errorCode\u001b[33m,\u001b[39m statusCode)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 49 |\u001b[39m     \u001b[36mreturn\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mBusinessException\u001b[39m({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       message\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m       errorCode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m       operation\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException (\u001b[22m\u001b[2msrc/common/core/exceptions/universal-exception.factory.ts\u001b[2m:49:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.createBusinessException [as createConfig] (\u001b[22m\u001b[2msrc/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts\u001b[2m:162:39)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts\u001b[39m\u001b[0m\u001b[2m:492:46)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":3,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should create default configuration","status":"passed","title":"should create default configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should include required TTL configuration","status":"passed","title":"should include required TTL configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should include performance configuration","status":"passed","title":"should include performance configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should include intervals configuration","status":"passed","title":"should include intervals configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":5,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should include limits configuration","status":"passed","title":"should include limits configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should include retry configuration","status":"passed","title":"should include retry configuration"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should have reasonable default values","status":"passed","title":"should have reasonable default values"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should respect environment variables","status":"passed","title":"should respect environment variables"},{"ancestorTitles":["SmartCacheConfigFactory","createConfig"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory createConfig should provide immutable configuration","status":"passed","title":"should provide immutable configuration"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration validation"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration validation should create valid configuration structure","status":"passed","title":"should create valid configuration structure"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration validation"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration validation should have logical constraints between values","status":"passed","title":"should have logical constraints between values"},{"ancestorTitles":["SmartCacheConfigFactory","Environment Variable Parsing"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m10\u001b[39m\nReceived: \u001b[31m5\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:185:45)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Environment Variable Parsing should use environment variables when provided","status":"failed","title":"should use environment variables when provided"},{"ancestorTitles":["SmartCacheConfigFactory","Environment Variable Parsing"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory Environment Variable Parsing should handle invalid integer environment variables gracefully","status":"passed","title":"should handle invalid integer environment variables gracefully"},{"ancestorTitles":["SmartCacheConfigFactory","Environment Variable Parsing"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory Environment Variable Parsing should handle boolean environment variables correctly","status":"passed","title":"should handle boolean environment variables correctly"},{"ancestorTitles":["SmartCacheConfigFactory","Environment Variable Parsing"],"duration":0,"failureMessages":["BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n    at Function.createBusinessException (/Users/honor/Documents/code/newstockapi/backend/src/common/core/exceptions/universal-exception.factory.ts:49:12)\n    at Function.createBusinessException [as createConfig] (/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts:162:39)\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:229:46)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Environment Variable Parsing should apply min/max boundaries to parsed values","status":"failed","title":"should apply min/max boundaries to parsed values"},{"ancestorTitles":["SmartCacheConfigFactory","Environment Variable Parsing"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Environment Variable Parsing should use verbose logging when enabled","status":"passed","title":"should use verbose logging when enabled"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration Validation"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived function did not throw\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:303:10)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Configuration Validation should throw error for invalid configuration","status":"failed","title":"should throw error for invalid configuration"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration Validation should validate TTL configuration boundaries","status":"passed","title":"should validate TTL configuration boundaries"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration Validation should validate performance configuration boundaries","status":"passed","title":"should validate performance configuration boundaries"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration Validation should validate limits configuration boundaries","status":"passed","title":"should validate limits configuration boundaries"},{"ancestorTitles":["SmartCacheConfigFactory","Configuration Validation"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Configuration Validation should validate retry configuration","status":"passed","title":"should validate retry configuration"},{"ancestorTitles":["SmartCacheConfigFactory","System Information"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory System Information should provide system information","status":"passed","title":"should provide system information"},{"ancestorTitles":["SmartCacheConfigFactory","System Information"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory System Information should show custom environment variables when set","status":"passed","title":"should show custom environment variables when set"},{"ancestorTitles":["SmartCacheConfigFactory","CPU and Memory Based Configuration"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory CPU and Memory Based Configuration should adapt configuration based on CPU cores","status":"passed","title":"should adapt configuration based on CPU cores"},{"ancestorTitles":["SmartCacheConfigFactory","CPU and Memory Based Configuration"],"duration":1,"failureMessages":[],"fullName":"SmartCacheConfigFactory CPU and Memory Based Configuration should adapt memory configuration based on total memory","status":"passed","title":"should adapt memory configuration based on total memory"},{"ancestorTitles":["SmartCacheConfigFactory","CPU and Memory Based Configuration"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory CPU and Memory Based Configuration should create consistent configuration on multiple calls","status":"passed","title":"should create consistent configuration on multiple calls"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should handle float environment variables","status":"passed","title":"should handle float environment variables"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should handle missing environment variables gracefully","status":"passed","title":"should handle missing environment variables gracefully"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":["BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n    at Function.createBusinessException (/Users/honor/Documents/code/newstockapi/backend/src/common/core/exceptions/universal-exception.factory.ts:49:12)\n    at Function.createBusinessException [as createConfig] (/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts:162:39)\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:466:46)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should handle extreme environment variable values","status":"failed","title":"should handle extreme environment variable values"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":["BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n    at Function.createBusinessException (/Users/honor/Documents/code/newstockapi/backend/src/common/core/exceptions/universal-exception.factory.ts:49:12)\n    at Function.createBusinessException [as createConfig] (/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts:162:39)\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:476:46)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should handle memory calculation edge cases","status":"failed","title":"should handle memory calculation edge cases"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":["BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n    at Function.createBusinessException (/Users/honor/Documents/code/newstockapi/backend/src/common/core/exceptions/universal-exception.factory.ts:49:12)\n    at Function.createBusinessException [as createConfig] (/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts:162:39)\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:484:46)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should validate configuration name requirements","status":"failed","title":"should validate configuration name requirements"},{"ancestorTitles":["SmartCacheConfigFactory","Edge Cases and Error Handling"],"duration":0,"failureMessages":["BusinessException: SmartCache configuration validation failed: performance.maxConcurrentOperations should not exceed 100 for performance reasons\n    at Function.createBusinessException (/Users/honor/Documents/code/newstockapi/backend/src/common/core/exceptions/universal-exception.factory.ts:49:12)\n    at Function.createBusinessException [as createConfig] (/Users/honor/Documents/code/newstockapi/backend/src/core/05-caching/module/smart-cache/config/smart-cache-config.factory.ts:162:39)\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/config/smart-cache-config.factory.spec.ts:492:46)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheConfigFactory Edge Cases and Error Handling should ensure TTL relationships are logical","status":"failed","title":"should ensure TTL relationships are logical"}]},{"numFailingTests":2,"numPassingTests":39,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759212104605,"loadTestEnvironmentEnd":1759212097174,"loadTestEnvironmentStart":1759212096859,"runtime":7429,"setupAfterEnvEnd":1759212097625,"setupAfterEnvStart":1759212097625,"setupFilesEnd":1759212097176,"setupFilesStart":1759212097176,"slow":true,"start":1759212097176},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/utils/smart-cache-request.utils.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheRequestUtils › createStableSymbolsHash › should throw error when crypto module is unavailable\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected substring: \u001b[32m\"Node.js crypto module is unavailable\"\u001b[39m\n\n    Received function did not throw\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 254 |\u001b[39m       expect(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 255 |\u001b[39m         createStableSymbolsHash([\u001b[32m'AAPL'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 256 |\u001b[39m       })\u001b[33m.\u001b[39mtoThrow(\u001b[32m'Node.js crypto module is unavailable'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 257 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 258 |\u001b[39m       \u001b[90m// Restore original crypto\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 259 |\u001b[39m       jest\u001b[33m.\u001b[39mdoMock(\u001b[32m'crypto'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m originalCrypto)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/utils/smart-cache-request.utils.spec.ts\u001b[39m\u001b[0m\u001b[2m:256:10)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSmartCacheRequestUtils › extractMarketFromSymbols › should return UNKNOWN for unrecognized patterns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"UNKNOWN\"\u001b[39m\n    Received: \u001b[31m\"SH\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 295 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 296 |\u001b[39m     it(\u001b[32m'should return UNKNOWN for unrecognized patterns'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 297 |\u001b[39m       expect(extractMarketFromSymbols([\u001b[32m'12345'\u001b[39m]))\u001b[33m.\u001b[39mtoBe(\u001b[32m'UNKNOWN'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 5位数字\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 298 |\u001b[39m       expect(extractMarketFromSymbols([\u001b[32m'ABC123'\u001b[39m]))\u001b[33m.\u001b[39mtoBe(\u001b[32m'UNKNOWN'\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// 混合字符\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 299 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 300 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/jest/unit/core/05-caching/module/smart-cache/utils/smart-cache-request.utils.spec.ts\u001b[39m\u001b[0m\u001b[2m:297:51)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["SmartCacheRequestUtils","setDefaultMarketInferenceService"],"duration":3,"failureMessages":[],"fullName":"SmartCacheRequestUtils setDefaultMarketInferenceService should set market inference service","status":"passed","title":"should set market inference service"},{"ancestorTitles":["SmartCacheRequestUtils","setDefaultMarketInferenceService"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils setDefaultMarketInferenceService should clear market inference service when passed null","status":"passed","title":"should clear market inference service when passed null"},{"ancestorTitles":["SmartCacheRequestUtils","buildCacheOrchestratorRequest"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildCacheOrchestratorRequest should build valid cache orchestrator request","status":"passed","title":"should build valid cache orchestrator request"},{"ancestorTitles":["SmartCacheRequestUtils","buildCacheOrchestratorRequest"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildCacheOrchestratorRequest should handle single symbol","status":"passed","title":"should handle single symbol"},{"ancestorTitles":["SmartCacheRequestUtils","buildCacheOrchestratorRequest"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildCacheOrchestratorRequest should handle different strategies","status":"passed","title":"should handle different strategies"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should build key with single symbol","status":"passed","title":"should build key with single symbol"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should build key with multiple symbols (≤5)","status":"passed","title":"should build key with multiple symbols (≤5)"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should sort symbols in multiple symbol keys","status":"passed","title":"should sort symbols in multiple symbol keys"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should use hash for many symbols (>5)","status":"passed","title":"should use hash for many symbols (>5)"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should include additional parameters","status":"passed","title":"should include additional parameters"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should sort additional parameters","status":"passed","title":"should sort additional parameters"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":15,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should throw error for empty prefix","status":"passed","title":"should throw error for empty prefix"},{"ancestorTitles":["SmartCacheRequestUtils","buildUnifiedCacheKey"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils buildUnifiedCacheKey should throw error for empty symbols","status":"passed","title":"should throw error for empty symbols"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should create consistent hash for same symbols","status":"passed","title":"should create consistent hash for same symbols"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should create same hash regardless of order","status":"passed","title":"should create same hash regardless of order"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should create same hash regardless of case","status":"passed","title":"should create same hash regardless of case"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should remove duplicates","status":"passed","title":"should remove duplicates"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should return 16-character hex string","status":"passed","title":"should return 16-character hex string"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should throw error for empty symbols","status":"passed","title":"should throw error for empty symbols"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should throw error for symbols with only whitespace","status":"passed","title":"should throw error for symbols with only whitespace"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should handle symbols with whitespace","status":"passed","title":"should handle symbols with whitespace"},{"ancestorTitles":["SmartCacheRequestUtils","createStableSymbolsHash"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoThrow\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected substring: \u001b[32m\"Node.js crypto module is unavailable\"\u001b[39m\n\nReceived function did not throw\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/utils/smart-cache-request.utils.spec.ts:256:10)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheRequestUtils createStableSymbolsHash should throw error when crypto module is unavailable","status":"failed","title":"should throw error when crypto module is unavailable"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should return UNKNOWN for empty symbols","status":"passed","title":"should return UNKNOWN for empty symbols"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should detect HK market","status":"passed","title":"should detect HK market"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should detect US market","status":"passed","title":"should detect US market"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should detect SZ market","status":"passed","title":"should detect SZ market"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should detect SH market","status":"passed","title":"should detect SH market"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should use first symbol for detection","status":"passed","title":"should use first symbol for detection"},{"ancestorTitles":["SmartCacheRequestUtils","extractMarketFromSymbols"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"UNKNOWN\"\u001b[39m\nReceived: \u001b[31m\"SH\"\u001b[39m\n    at Object.<anonymous> (/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/utils/smart-cache-request.utils.spec.ts:297:51)\n    at Promise.finally.completed (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)\n    at _callCircusTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:946:3)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)\n    at jestAdapter (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-runner/build/testWorker.js:497:12)"],"fullName":"SmartCacheRequestUtils extractMarketFromSymbols should return UNKNOWN for unrecognized patterns","status":"failed","title":"should return UNKNOWN for unrecognized patterns"},{"ancestorTitles":["SmartCacheRequestUtils","inferMarketFromSymbol"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils inferMarketFromSymbol should use default market inference service when available","status":"passed","title":"should use default market inference service when available"},{"ancestorTitles":["SmartCacheRequestUtils","inferMarketFromSymbol"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils inferMarketFromSymbol should pass options to market inference service","status":"passed","title":"should pass options to market inference service"},{"ancestorTitles":["SmartCacheRequestUtils","inferMarketFromSymbol"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils inferMarketFromSymbol should fallback to SymbolValidationUtils when no service set","status":"passed","title":"should fallback to SymbolValidationUtils when no service set"},{"ancestorTitles":["SmartCacheRequestUtils","inferMarketFromSymbol"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils inferMarketFromSymbol should return US market as default when utils return null","status":"passed","title":"should return US market as default when utils return null"},{"ancestorTitles":["SmartCacheRequestUtils","validateCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils validateCacheKey should validate correct cache keys","status":"passed","title":"should validate correct cache keys"},{"ancestorTitles":["SmartCacheRequestUtils","validateCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils validateCacheKey should reject invalid cache keys","status":"passed","title":"should reject invalid cache keys"},{"ancestorTitles":["SmartCacheRequestUtils","validateCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils validateCacheKey should reject non-string inputs","status":"passed","title":"should reject non-string inputs"},{"ancestorTitles":["SmartCacheRequestUtils","validateCacheKey"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils validateCacheKey should handle whitespace correctly","status":"passed","title":"should handle whitespace correctly"},{"ancestorTitles":["SmartCacheRequestUtils","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils Edge Cases and Error Handling should handle special characters in symbols","status":"passed","title":"should handle special characters in symbols"},{"ancestorTitles":["SmartCacheRequestUtils","Edge Cases and Error Handling"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils Edge Cases and Error Handling should handle very long symbol lists","status":"passed","title":"should handle very long symbol lists"},{"ancestorTitles":["SmartCacheRequestUtils","Edge Cases and Error Handling"],"duration":1,"failureMessages":[],"fullName":"SmartCacheRequestUtils Edge Cases and Error Handling should handle complex additional parameters","status":"passed","title":"should handle complex additional parameters"},{"ancestorTitles":["SmartCacheRequestUtils","Edge Cases and Error Handling"],"duration":0,"failureMessages":[],"fullName":"SmartCacheRequestUtils Edge Cases and Error Handling should handle unicode symbols","status":"passed","title":"should handle unicode symbols"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"loadTestEnvironmentEnd":0,"loadTestEnvironmentStart":0,"runtime":0,"setupAfterEnvEnd":0,"setupAfterEnvStart":0,"setupFilesEnd":0,"setupFilesStart":0,"slow":false,"start":0},"testFilePath":"/Users/honor/Documents/code/newstockapi/backend/test/jest/unit/core/05-caching/module/smart-cache/services/smart-cache-performance-optimizer.service.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Jest worker encountered 4 child process exceptions, exceeding retry limit\n\n      \u001b[2mat ChildProcessWorker.initialize (\u001b[22mnode_modules/jest-worker/build/index.js\u001b[2m:805:21)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["src/core/05-caching/module/smart-cache/**/*.ts"],"coverageDirectory":"/Users/honor/Documents/code/newstockapi/backend/coverage/smart-cache","coverageProvider":"babel","coverageReporters":["text","html","json"],"coverageThreshold":{"global":{"branches":80,"functions":80,"lines":80,"statements":80}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":9,"noStackTrace":false,"nonFlagArgs":["test/jest/unit/core/05-caching/module/smart-cache"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/honor/Documents/code/newstockapi/backend/node_modules/jest-html-reporters/index.js",{}]],"rootDir":"/Users/honor/Documents/code/newstockapi/backend","runInBand":false,"runTestsByPath":false,"seed":-1768777339,"silent":false,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":["test/jest/unit/core/05-caching/module/smart-cache"],"type":"TestPathPatterns"},"testSequencer":"/Users/honor/Documents/code/newstockapi/backend/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"coverage/smart-cache/index.html"},"endTime":1759212109661,"_reporterOptions":{"publicPath":"/Users/honor/Documents/code/newstockapi/backend","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})