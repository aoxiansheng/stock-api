/**
 * 核心数值常量 - 扁平化结构
 *
 * 设计原则：
 * 1. 所有数值直接定义，不使用内部引用
 * 2. 按数值大小分组，方便查找和维护
 * 3. 命名采用 N_{数值} 格式，清晰明确
 * 4. 这是整个系统中数值的唯一真实来源
 *
 * 基于分析结果，重点解决以下高频重复数值：
 * - 数值 2: 18次重复 → N_2
 * - 数值 100: 18次重复 → N_100
 * - 数值 1000: 18次重复 → N_1000
 * - 数值 5: 15次重复 → N_5
 * - 数值 10: 14次重复 → N_10
 * - 数值 10000: 14次重复 → N_10000
 */

export const NUMERIC_CONSTANTS = Object.freeze({
  // ===== 基础数值 (0-100) =====
  N_0: 0,
  N_1: 1,
  N_2: 2, // 🎯 18次重复统一
  N_3: 3, // 10次重复
  N_4: 4, // 3次重复
  N_5: 5, // 🎯 15次重复统一
  N_6: 6, // 2次重复
  N_8: 8, // 2次重复
  N_10: 10, // 🎯 14次重复统一
  N_20: 20, // 6次重复
  N_25: 25, // 3次重复
  N_30: 30, // 4次重复
  N_36: 36, // Base-36 for radix
  N_50: 50, // 12次重复
  N_60: 60, // 3次重复
  N_64: 64, // 2次重复
  N_75: 75, // 百分比相关
  N_90: 90, // 2次重复
  N_HALF: 50, // 一半值
  N_THREE_QUARTERS: 75, // 四分之三值
  N_100: 100, // 🎯 18次重复统一

  // ===== 数百级数值 (100-1000) =====
  N_200: 200, // 6次重复
  N_201: 201, // HTTP状态码
  N_204: 204, // HTTP状态码
  N_300: 300, // 4次重复
  N_301: 301, // HTTP状态码
  N_302: 302, // HTTP状态码
  N_304: 304, // HTTP状态码
  N_255: 255, // 文件名长度
  N_320: 320, // 邮箱最大长度
  N_400: 400, // HTTP状态码
  N_401: 401, // HTTP状态码
  N_403: 403, // HTTP状态码
  N_404: 404, // HTTP状态码
  N_405: 405, // HTTP状态码
  N_409: 409, // HTTP状态码
  N_413: 413, // HTTP状态码
  N_422: 422, // HTTP状态码
  N_429: 429, // HTTP状态码
  N_500: 500, // 9次重复 + HTTP状态码
  N_501: 501, // HTTP状态码
  N_502: 502, // HTTP状态码
  N_503: 503, // HTTP状态码
  N_504: 504, // HTTP状态码
  N_600: 600, // 10分钟秒数
  N_1000: 1000, // 🎯 18次重复统一

  // ===== 数千级数值 (1000-10000) =====
  N_1024: 1024, // 内存相关，2次重复
  N_1800: 1800, // 时间相关，2次重复
  N_2000: 2000, // 4次重复
  N_2048: 2048, // URL长度等，3次重复
  N_3000: 3000, // 3秒毫秒
  N_3600: 3600, // 小时秒数，3次重复
  N_5000: 5000, // 11次重复
  N_10000: 10000, // 🎯 14次重复统一

  // ===== 万级数值 (10000+) =====
  N_15000: 15000, // 15秒毫秒
  N_30000: 30000, // 9次重复
  N_60000: 60000, // 分钟毫秒数，4次重复
  N_86400: 86400, // 一天秒数，4次重复
  N_100000: 100000, // 4次重复
  N_120000: 120000, // 2分钟毫秒
  N_180000: 180000, // 3分钟毫秒
  N_300000: 300000, // 5分钟毫秒
  N_600000: 600000, // 10分钟毫秒

  // ===== 特殊大数值 =====
  N_1000000: 1000000, // 百万
  N_2592000: 2592000, // 30天秒数 (30*24*60*60)
  N_2628000: 2628000, // 30天秒数 (旧值)
  N_3600000: 3600000, // 1小时毫秒
  N_7776000: 7776000, // 90天秒数 (90*24*60*60)
  N_7884000: 7884000, // 90天秒数 (旧值)
  N_10000000: 10000000, // 千万
  N_100000000: 100000000, // 亿
  N_1000000000: 1000000000, // 十亿
  N_MAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,
} as const);

// 类型导出
export type NumericConstantsType = typeof NUMERIC_CONSTANTS;
