/**
 * Shared Component Error Codes
 *
 * Following unified error handling standards:
 * Format: SHARED_{CATEGORY}_{SEQUENCE}
 *
 * Categories:
 * - VALIDATION (001-299): Parameter validation, format validation, business rules validation
 * - BUSINESS (300-599): Business flow, status conflicts, resource not found
 * - SYSTEM (600-899): Memory/CPU, timeout, configuration errors
 * - EXTERNAL (900-999): Database, third-party API, network errors
 */
export const SHARED_ERROR_CODES = Object.freeze({
  // Validation Errors (001-299)
  INVALID_PATH_FORMAT: 'SHARED_VALIDATION_001',
  PATH_DEPTH_EXCEEDED: 'SHARED_VALIDATION_002',
  INVALID_OBJECT_TYPE: 'SHARED_VALIDATION_003',
  INVALID_SYMBOL_FORMAT: 'SHARED_VALIDATION_004',
  MISSING_REQUIRED_PARAMETER: 'SHARED_VALIDATION_005',
  INVALID_FIELD_MAPPING: 'SHARED_VALIDATION_006',
  DANGEROUS_PROPERTY_ACCESS: 'SHARED_VALIDATION_007',

  // Business Logic Errors (300-599)
  MARKET_STATUS_UNAVAILABLE: 'SHARED_BUSINESS_300',
  DATA_CHANGE_NOT_DETECTED: 'SHARED_BUSINESS_301',
  FIELD_MAPPING_FAILED: 'SHARED_BUSINESS_302',
  SNAPSHOT_COMPARISON_FAILED: 'SHARED_BUSINESS_303',
  PROVIDER_INTEGRATION_UNAVAILABLE: 'SHARED_BUSINESS_350',

  // System Resource Errors (600-899)
  MEMORY_CACHE_FULL: 'SHARED_SYSTEM_600',
  OPERATION_TIMEOUT: 'SHARED_SYSTEM_700',
  CONFIGURATION_ERROR: 'SHARED_SYSTEM_800',

  // External Dependency Errors (900-999)
  CACHE_SERVICE_ERROR: 'SHARED_EXTERNAL_900',
  REDIS_SNAPSHOT_ERROR: 'SHARED_EXTERNAL_901',
  PROVIDER_CONNECTION_FAILED: 'SHARED_EXTERNAL_950',
  PROVIDER_SERVICE_UNAVAILABLE: 'SHARED_EXTERNAL_951',
} as const);

export type SharedErrorCode = typeof SHARED_ERROR_CODES[keyof typeof SHARED_ERROR_CODES];