/**
 * 重构后的查询常量分组结构
 * 将16个分散的常量组合并为8个主要分组，提升可维护性
 * 
 * 分组策略：
 * 1. QUERY_CONFIG - 基础配置、默认值和性能配置
 * 2. QUERY_VALIDATION - 验证和限制规则
 * 3. QUERY_CACHE_SETTINGS - 缓存配置和TTL设置
 * 4. QUERY_TIMEOUTS - 超时配置
 * 5. QUERY_MESSAGES - 所有消息类型（错误、警告、成功）
 * 6. QUERY_SYSTEM - 事件、操作、状态
 * 7. QUERY_MONITORING - 指标和健康检查
 * 8. QUERY_DATA_SOURCES - 数据源类型
 */

import {
  QUERY_CONFIG,
  QUERY_DEFAULTS,
  QUERY_PERFORMANCE_CONFIG,
  QUERY_VALIDATION_RULES,
  QUERY_CACHE_CONFIG,
  QUERY_CACHE_TTL_CONFIG,
  QUERY_TIMEOUT_CONFIG,
  QUERY_ERROR_MESSAGES,
  QUERY_WARNING_MESSAGES,
  QUERY_SUCCESS_MESSAGES,
  QUERY_EVENTS,
  QUERY_OPERATIONS,
  QUERY_STATUS,
  QUERY_METRICS,
  QUERY_HEALTH_CONFIG,
  QUERY_DATA_SOURCE_TYPES,
  QUERY_LIMITS
} from "./query.constants";

/**
 * 查询基础配置（合并基础配置、默认值和性能配置）
 */
export const QUERY_CONFIG_GROUPED = Object.freeze({
  // 基础配置
  ...QUERY_CONFIG,
  // 默认值
  ...QUERY_DEFAULTS,
  // 性能配置
  SLOW_QUERY_THRESHOLD_MS: QUERY_PERFORMANCE_CONFIG.SLOW_QUERY_THRESHOLD_MS,
  MAX_SYMBOLS_PER_QUERY: QUERY_PERFORMANCE_CONFIG.MAX_SYMBOLS_PER_QUERY,
  MAX_BULK_QUERIES: QUERY_PERFORMANCE_CONFIG.MAX_BULK_QUERIES,
  LOG_SYMBOLS_LIMIT: QUERY_PERFORMANCE_CONFIG.LOG_SYMBOLS_LIMIT,
  // 查询限制快捷访问
  LIMITS: QUERY_LIMITS
} as const);

/**
 * 查询验证配置（合并所有验证和限制规则）
 */
export const QUERY_VALIDATION_GROUPED = Object.freeze({
  ...QUERY_VALIDATION_RULES
} as const);

/**
 * 查询缓存配置（合并缓存配置和TTL设置）
 */
export const QUERY_CACHE_SETTINGS = Object.freeze({
  // 缓存配置
  ...QUERY_CACHE_CONFIG,
  // TTL配置
  ...QUERY_CACHE_TTL_CONFIG
} as const);

/**
 * 查询超时配置
 */
export const QUERY_TIMEOUTS = QUERY_TIMEOUT_CONFIG;

/**
 * 查询消息配置（合并所有消息类型）
 */
export const QUERY_MESSAGES = Object.freeze({
  ERROR: QUERY_ERROR_MESSAGES,
  WARNING: QUERY_WARNING_MESSAGES,
  SUCCESS: QUERY_SUCCESS_MESSAGES
} as const);

/**
 * 查询系统配置（合并事件、操作、状态）
 */
export const QUERY_SYSTEM = Object.freeze({
  EVENTS: QUERY_EVENTS,
  OPERATIONS: QUERY_OPERATIONS,
  STATUS: QUERY_STATUS
} as const);

/**
 * 查询监控配置（指标和健康检查）
 */
export const QUERY_MONITORING = Object.freeze({
  METRICS: QUERY_METRICS,
  HEALTH: QUERY_HEALTH_CONFIG
} as const);

/**
 * 查询数据源配置
 */
export const QUERY_DATA_SOURCES = Object.freeze({
  TYPES: QUERY_DATA_SOURCE_TYPES
} as const);

/**
 * 统一导出对象（提供向后兼容性）
 */
export const QUERY_CONSTANTS_GROUPED = Object.freeze({
  CONFIG: QUERY_CONFIG_GROUPED,
  VALIDATION: QUERY_VALIDATION_GROUPED,
  CACHE: QUERY_CACHE_SETTINGS,
  TIMEOUTS: QUERY_TIMEOUTS,
  MESSAGES: QUERY_MESSAGES,
  SYSTEM: QUERY_SYSTEM,
  MONITORING: QUERY_MONITORING,
  DATA_SOURCES: QUERY_DATA_SOURCES
} as const);

/**
 * 便利导出（推荐使用）
 * 注意：避免与已定义的常量冲突，使用别名导出
 */
export {
  QUERY_CONFIG_GROUPED as QUERY_CONFIG_NEW,
  QUERY_VALIDATION_GROUPED as QUERY_VALIDATION_NEW,
  QUERY_CACHE_SETTINGS as QUERY_CACHE_SETTINGS_NEW,
  QUERY_TIMEOUTS as QUERY_TIMEOUTS_NEW,
  QUERY_MESSAGES as QUERY_MESSAGES_NEW,
  QUERY_SYSTEM as QUERY_SYSTEM_NEW,
  QUERY_MONITORING as QUERY_MONITORING_NEW,
  QUERY_DATA_SOURCES as QUERY_DATA_SOURCES_NEW
};