/**
 * Data Mapper Cache 环境变量键名常量
 * 采用类型安全的方式管理环境变量键名，提供编译时检查
 * 遵循 SmartCache 的环境变量配置模式
 */
export const DATA_MAPPER_CACHE_ENV_VARS = Object.freeze({
  // TTL配置 (秒)
  BEST_RULE_TTL_SECONDS: "DATA_MAPPER_CACHE_BEST_RULE_TTL_SECONDS",
  RULE_BY_ID_TTL_SECONDS: "DATA_MAPPER_CACHE_RULE_BY_ID_TTL_SECONDS",
  PROVIDER_RULES_TTL_SECONDS: "DATA_MAPPER_CACHE_PROVIDER_RULES_TTL_SECONDS",
  RULE_STATS_TTL_SECONDS: "DATA_MAPPER_CACHE_RULE_STATS_TTL_SECONDS",

  // 性能配置
  SLOW_OPERATION_THRESHOLD_MS: "DATA_MAPPER_CACHE_SLOW_OP_THRESHOLD_MS",
  MAX_BATCH_SIZE: "DATA_MAPPER_CACHE_MAX_BATCH_SIZE",
  STATS_CLEANUP_INTERVAL_MS: "DATA_MAPPER_CACHE_STATS_CLEANUP_INTERVAL_MS",

  // 操作超时配置 (毫秒)
  DEFAULT_SCAN_TIMEOUT_MS: "DATA_MAPPER_CACHE_DEFAULT_SCAN_TIMEOUT_MS",
  PROVIDER_INVALIDATE_TIMEOUT_MS: "DATA_MAPPER_CACHE_PROVIDER_INVALIDATE_TIMEOUT_MS",
  STATS_SCAN_TIMEOUT_MS: "DATA_MAPPER_CACHE_STATS_SCAN_TIMEOUT_MS",
  CLEAR_ALL_TIMEOUT_MS: "DATA_MAPPER_CACHE_CLEAR_ALL_TIMEOUT_MS",

  // 批处理操作配置
  REDIS_SCAN_COUNT: "DATA_MAPPER_CACHE_REDIS_SCAN_COUNT",
  DELETE_BATCH_SIZE: "DATA_MAPPER_CACHE_DELETE_BATCH_SIZE",
  MAX_KEYS_PREVENTION: "DATA_MAPPER_CACHE_MAX_KEYS_PREVENTION",
  INTER_BATCH_DELAY_MS: "DATA_MAPPER_CACHE_INTER_BATCH_DELAY_MS",

  // 大小限制配置
  MAX_KEY_LENGTH: "DATA_MAPPER_CACHE_MAX_KEY_LENGTH",
  MAX_RULE_SIZE_KB: "DATA_MAPPER_CACHE_MAX_RULE_SIZE_KB",

  // 共享TTL配置（映射到basic-cache的环境变量）
  BATCH_QUERY_TTL_SECONDS: "CACHE_BATCH_QUERY_TTL_SECONDS",
  NEAR_REAL_TIME_TTL_SECONDS: "CACHE_NEAR_REAL_TIME_TTL_SECONDS",
  DEFAULT_TTL_SECONDS: "CACHE_DEFAULT_TTL_SECONDS",

  // 共享间隔配置（映射到basic-cache的环境变量）
  CLEANUP_INTERVAL_MS: "CACHE_CLEANUP_INTERVAL_MS",
  OPERATION_TIMEOUT_MS: "CACHE_OPERATION_TIMEOUT_MS",

  // 共享批次配置（映射到basic-cache的环境变量）
  DATA_MAPPING_BATCH_SIZE: "CACHE_DATA_MAPPING_BATCH_SIZE",
  REDIS_DELETE_BATCH_SIZE: "CACHE_REDIS_DELETE_BATCH_SIZE",
} as const);

// 类型推导：环境变量键名类型
export type DataMapperCacheEnvVarKey =
  (typeof DATA_MAPPER_CACHE_ENV_VARS)[keyof typeof DATA_MAPPER_CACHE_ENV_VARS];

// 环境变量配置项类型映射
export type DataMapperCacheEnvConfig = {
  readonly [K in keyof typeof DATA_MAPPER_CACHE_ENV_VARS]: string;
};

// 提供类型安全的环境变量访问器
export const getEnvVar = <K extends keyof typeof DATA_MAPPER_CACHE_ENV_VARS>(
  key: K,
): DataMapperCacheEnvVarKey => DATA_MAPPER_CACHE_ENV_VARS[key];